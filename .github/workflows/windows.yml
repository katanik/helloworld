name: Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  
  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build/windows -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build/windows --config ${{env.BUILD_TYPE}}

  #create-release-for-windows:
  #  name: Create release and move it to GitHub Releases
  #  needs: build-windows
  #  runs-on: windows-2019

  #  steps:
  #  - uses: actions/checkout@v2

    - name: Archive
      uses: papeloto/action-zip@v1
      with:
        files: ${{github.workspace}}/build/windows
        dest: helloworld.zip

    - name: Create Release ${{ runner.os }}
      id: create_release_for_windows
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ runner.os }}${{ github.run_number }}
        release_name: Release for ${{ runner.os }} ${{ github.run_number }}

    - name: Upload Release ${{ runner.os }}
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release_for_windows.outputs.upload_url }}
        asset_path: ./helloworld.zip
        asset_name: helloworld-v${{ github.run_number }}.zip
        asset_content_type: application/zip


